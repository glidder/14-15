\begin{lstlisting}
/*
 * Function that selects the defenses to be placed
 */
void DEF_LIB_EXPORTED selectDefenses(std::list<Defense*> defenses, unsigned int ases, std::list<int> &selectedIDs
            , float mapWidth, float mapHeight, std::list<Object*> obstacles) {
    
    //The first element always gets selected, and then is removed from the list
    selectedIDs.push_back(defenses.front()->id);
    ases-=defenses.front()->cost;
    defenses.pop_front();
    //The table of subproblems is calculated
    std::vector<float> values(defenses.size());
    values=evaluateDefenses(defenses);
    std::vector<std::vector<float> > subTable(defenses.size(),std::vector<float>(ases+1));
    subTable=subproblemTable(defenses,values,ases);

    //The list of objects included in the optimal solution is retrieved
    std::list<Defense*>::iterator it = defenses.begin();
    for (int i=defenses.size()-1;i>0;--i){
        if(subTable[i][ases]!=subTable[i-1][ases]){
            selectedIDs.push_back((*it)->id);
            ases-=(*it)->cost;
            std::cout<<"Selected ID: "<<(*it)->id<<"cost: "<<(*it)->cost<<std::endl;
        }
        ++it; 
    }
    if(subTable[0][ases]!=0)
        selectedIDs.push_back((*it)->id);
}
\end{lstlisting}
